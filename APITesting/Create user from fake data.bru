meta {
  name: Create user from fake data
  type: http
  seq: 8
}

post {
  url: {{baseUrl}}/users
  body: json
  auth: none
}

body:json {
  {
    "name": "{{name}}",
    "job": "{{job}}"
  }
}

vars:pre-request {
  ~name: morpheus
  ~job: leader
}

vars:post-response {
  idValue: res.body.id
}

assert {
  res.status: eq 201
  res.body.name: eq {{name}}
  res.body.job: eq {{job}}
}

script:pre-request {
  const { faker } = require('@faker-js/faker')
  const randomName = faker.person.firstName();
  const randomJob = faker.person.jobTitle();
  
  req.setBody({
    name: randomName,
    job: randomJob
  })
}

script:post-response {
  bru.setVar('name',res.body.name);
  bru.setVar('job',res.body.job);
}

tests {
  test('status code test', () => {
    expect(res.getStatus()).to.equal(201);
  });
  
  test('name data type test', () => {
    const data = res.getBody()
    expect(data.name).to.be.a('string');
  });
  
  test('name value test', () => {
    const data = res.getBody()
    expect(data.name).to.equal(bru.getVar('name'));
  });
  
  test('status text check', () => {
    expect(res.statusText).to.equal('Created')
  });
  
}
