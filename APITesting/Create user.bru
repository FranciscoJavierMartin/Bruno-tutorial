meta {
  name: Create user
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/users
  body: json
  auth: none
}

body:json {
  {
    "name": "{{name}}",
    "job": "{{job}}"
  }
}

vars:pre-request {
  name: morpheus
  job: leader
}

vars:post-response {
  idValue: res.body.id
}

assert {
  res.status: eq 201
  res.body.name: eq morpheus
  res.body.job: eq leader
}

tests {
  test('status code test', () => {
    expect(res.getStatus()).to.equal(201);
  });
  
  test('name data type test', () => {
    const data = res.getBody()
    expect(data.name).to.be.a('string');
  });
  
  test('name value test', () => {
    const data = res.getBody()
    expect(data.name).to.equal('morpheus');
  });
  
  test('status text check', () => {
    expect(res.statusText).to.equal('Created')
  }); 
}
